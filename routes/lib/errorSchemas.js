import S from 'fluent-json-schema'

export function sBadRequest() {
  return S.object()
    .id('sBadRequest')
    .additionalProperties(false)
    .description('Bad Request')
    .prop('statusCode', S.number())
    .description('Http status code')
    .default('400')
    .required()
    .prop('error', S.string())
    .description('Http error')
    .default('Bad Request')
    .required()
    .prop('message', S.string())
    .description('Message')
    .required()
    .prop('internalCode', S.string())
    .description('Internal code')
    .required()
    .prop('details', S.object().additionalProperties(true))
    .description('Error details')
    .required()
}

export function sUnauthorized() {
  return S.object()
    .id('sUnauthorized')
    .additionalProperties(false)
    .description('Unauthorized')
    .prop('statusCode', S.number())
    .description('Http status code')
    .default('401')
    .required()
    .prop('error', S.string())
    .description('Http error')
    .default('Unauthorized')
    .required()
    .prop('message', S.string())
    .description('Message')
    .required()
    .prop('internalCode', S.string())
    .description('Internal code')
    .enum([
      '0000: no specific error code',
      '0001: invalid access: user not found',
      '0001: authentication session not found',
    ])
    .required()
    .prop('details', S.object().additionalProperties(true))
    .description('Error details')
    .required()
}

export function sForbidden() {
  return S.object()
    .id('sForbidden')
    .additionalProperties(false)
    .description('Forbidden')
    .prop('statusCode', S.number())
    .description('Http status code')
    .default('403')
    .required()
    .prop('error', S.string())
    .description('Http error')
    .default('Forbidden')
    .required()
    .prop('message', S.string())
    .description('Message')
    .required()
    .prop('internalCode', S.string())
    .description('Internal code')
    .enum([
      '0000: no specific error code',
      '0001: invalid access: user blocked by an administrator',
    ])
    .required()
    .prop('details', S.object().additionalProperties(true))
    .description('Error details')
    .required()
}

export function sNotFound() {
  return S.object()
    .id('sNotFound')
    .additionalProperties(false)
    .description('Not found')
    .prop('statusCode', S.number())
    .description('Http status code')
    .default('404')
    .required()
    .prop('error', S.string())
    .description('Http error')
    .default('Not found')
    .required()
    .prop('message', S.string())
    .description('Message')
    .required()
    .prop('internalCode', S.string())
    .description('Internal code')
    .required()
    .prop('details', S.object().additionalProperties(true))
    .description('Error details')
    .required()
}

export function sConflict() {
  return S.object()
    .id('sConflict')
    .additionalProperties(false)
    .description('Conflict')
    .prop('statusCode', S.number())
    .description('Http status code')
    .default('409')
    .required()
    .prop('error', S.string())
    .description('Http error')
    .default('Conflict')
    .required()
    .prop('message', S.string())
    .description('Message')
    .required()
    .prop('internalCode', S.string())
    .description('Internal code')
    .required()
    .prop('details', S.object().additionalProperties(true))
    .description('Error details')
    .required()
}
